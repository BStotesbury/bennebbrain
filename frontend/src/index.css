@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  @property --angle {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
  }

  @property --c1 { syntax: '<color>'; initial-value: #332E3C; inherits: false }
  @property --c2 { syntax: '<color>'; initial-value: #A29587; inherits: false }
  @property --c3 { syntax: '<color>'; initial-value: #f1effa; inherits: false }
  @property --c4 { syntax: '<color>'; initial-value: #d8d4f2; inherits: false }
  @property --c5 { syntax: '<color>'; initial-value: #846C5B; inherits: false }

  html, body, #root { height: 100% }
  body { @apply bg-transparent }
}

@layer utilities {
  .mesh-bg {
    position: absolute;
    inset: 0;
    /*transform-origin: center center;
    animation: mesh-rotate 12s linear infinite;
    will-change: transform;*/
    background-color: #cf99ff;
    background-image:
      radial-gradient(
        at var(--g1-x, 88%) var(--g1-y, 78%),
        hsla(24,18%,43%,1) 0px,
        transparent var(--g1-s, 50%)
      ),
      radial-gradient(
        at var(--g2-x, 20%) var(--g2-y, 15%),
        hsla(247,53%,89%,1) 0px,
        transparent var(--g2-s, 50%)
      ),
      radial-gradient(
        at var(--g3-x, 43%) var(--g3-y, 97%),
        hsla(33,12%,52%,1) 0px,
        transparent var(--g3-s, 50%)
      ),
      radial-gradient(
        at var(--g4-x, 26%) var(--g4-y, 74%),
        hsla(247,53%,52%,1) 0px,
        transparent var(--g4-s, 50%)
      ),
      radial-gradient(
        at var(--g5-x, 58%) var(--g5-y, 53%),
        hsla(24,18%,43%,1) 0px,
        transparent var(--g5-s, 50%)
      );
    background-size: cover;
    pointer-events: none;

    transition:
      --g1-x 8s ease-in-out,
      --g1-y 8s ease-in-out,
      --g1-s 8s ease-in-out,
      --g2-x 8s ease-in-out,
      --g2-y 8s ease-in-out,
      --g2-s 8s ease-in-out,
      --g3-x 8s ease-in-out,
      --g3-y 8s ease-in-out,
      --g3-s 8s ease-in-out,
      --g4-x 8s ease-in-out,
      --g4-y 8s ease-in-out,
      --g4-s 8s ease-in-out,
      --g5-x 8s ease-in-out,
      --g5-y 8s ease-in-out,
      --g5-s 8s ease-in-out;

  }
  @keyframes hueSpin {
  to { filter: hue-rotate(30deg); };
  }
  @keyframes mesh-rotate {
    to { transform: rotate(360deg); }
  }
}
